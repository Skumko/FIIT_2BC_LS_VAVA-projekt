/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.GUI;

/**
 *
 * @author matba
 */
public class Tips_And_Rules extends javax.swing.JFrame {

    /**
     * Creates new form Tips_And_Rules
     */
    public Tips_And_Rules() {
        initComponents();
        txtRules.select(0, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRules = new javax.swing.JPanel();
        scrollRules = new javax.swing.JScrollPane();
        txtRules = new javax.swing.JTextPane();
        lblRules = new javax.swing.JLabel();
        lblOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(816, 839));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRules.setBackground(new java.awt.Color(0, 40, 60));
        panelRules.setPreferredSize(new java.awt.Dimension(800, 800));
        panelRules.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scrollRules.setBackground(new java.awt.Color(200, 200, 200));

        txtRules.setEditable(false);
        txtRules.setBackground(new java.awt.Color(175, 175, 175));
        txtRules.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtRules.setText("Krok 1. Ako postaviť figúry na šachovnici\n\nNa začiatku hry je šachovnica položená tak, že každý hráč má biely (alebo svetlý) štvorec v pravom dolnom rohu.\n\nRozostavenie šachovnice\n\nFigúrky sú potom tak isto poukladané každý raz. Druhý rad je zaplnený pešiakmi. Veže idú do rohov, potom jazdci vedľa nich, nasledujú strelci a nakoniec dáma, ktorá vždy ide na svoju farbu (biela dáma na bielu, čierna dáma na čiernu) a kráľ na zvyšný štvorec.\n\nŠachovnica\n\nPostaviť figúry na začiatku partie je naozaj jednoduché.\n\nexplorer Odporúčaný nástroj -> Trénuj prehľad na šachovnici\n\n\nKrok 2. Ako sa hýbu šachové figúry\n\nKaždá zo 6 rôznych figúr sa hýbe rôzne. Nemôžu sa hýbať cez iné figúry (hoci jazdec môže skákať cez iné figúry) a nikdy sa nemôžu hýbať na polia s vlastnými figúrami. Avšak, môžu sa posunúť na miesto súperových figúr, ktoré sa potom berú. Figúry sa vo všeobecnosti hýbu na pozície, kde môžu brať iné figúry (tým, že prídu na ich pole a potom ich nahradia), brániť vlastné figúry, aby ich súper nebral alebo kontrolovať dôležité polia.\n\nAko ťahať kráľom\nKráľ je najdôležitejšia figúrka, ale je jedna z najslabších. Kráľ môže ísť len na 1 vedľajší štvorec ľubovoľným smerom - hore, dole, na strany a diagonálne. Kráľ sa nikdy nemôže posunúť do šachu (kde by mohol byť vyhodený). Keď je kráľ napadnutý inou figúrou, nazýva sa to „šach“.\n\nHýbanie kráľom v šachu\n\nAko ťahať dámou\nDáma je najsilnejšia figúrka. Môže sa posúvať v ľubovoľnom smere - dopredu, dozadu, do strán alebo diagonálne - tak ďaleko, pokiaľ jej nestojí v ceste iná svoja figúrka. A takisto, ako aj s ostatnými figúrkami, ak dáma berie súperovu figúrku, jej ťah tým skončil. Všimni si, ako biela dáma berie čiernu dámu a potom čierny kráľ je donútený sa hýbať.\n\nHýbanie dámou v šachu\n\nAko ťahať vežou\nVeža sa môže pohybovať tak ďaleko, ako chce, ale len dopredu, dozadu a do strán. Veže sú značne silné figúrky, keď sa kryjú navzájom alebo keď spolupracujú!\n\nHýbanie vežou v šachu\n\nAko ťahať strelcom\nStrelec sa môže hýbať tak ďaleko, ako chce, ale len diagonálne. Každý strelec štartuje na 1 farbe (svetlej alebo tmavej) a musí na tej farbe vždy ostať. Strelci dobre spolupracujú, pretože každý kryje slabiny toho druhého.\n\nHýbanie strelcom v šachu\n\nAko ťahať jazdcom\nJazdci sa pohybujú úplne iným spôsobom ako ostatné figúry - idú 2 políčka jedným smerom a potom 1 ďalšie políčko pod 90° uhlom - do písmena \"L\". Jazdci sú taktiež jedinými figúrami, ktoré môžu prechádzať ponad inými figúrami.\n\nHýbanie jazdcom v šachu\n\nAko ťahať pešiakom\nPešiaci sú nezvyčajní, pretože sa hýbu a berú rozdielnymi smermi: hýbu sa dopredu, ale berú diagonálne. Pešiaci sa môžu hýbať len 1 políčko dopredu, okrem prvého ťahu, kedy sa môžu posunúť o 2 polia. Pešiaci môžu brať len na 1 diagonálnom políčku pred nimi. Nikdy sa nemôžu hýbať alebo brať iné figúry dozadu. Ak je priamo pred pešiakom iná figúra, nemôže sa ďalej posúvať ani tú figúru zobrať.\n\nHýbanie pešiakom v šachu\n\ntrophies Odporúčaný nástroj -> Šachový solitér (vezmi všetky svoje figúry)\n\n\nKrok 3. Objav špeciálne pravidlá šachu\n\nV šachu je niekoľko pravidiel, ktoré ti sprvu možno neprídu logické. Boli vytvorené, aby urobili hru zábavnejšou a zaujímavejšou.\n\nAko premeniť pešiaka\nPešiaci majú ďalšiu špeciálnu schopnosť a tou je, že keď pešiak dosiahne na druhú stranu šachovnice, môže sa stať akoukoľvek figúrou (premena).\n\nPremena pešiaka\n\nPešiak môže byť premenený na akúkoľvek figúru. Bežný omyl je, že pešiak môže byť vymenený za figúru, ktorá padla. To NIE JE pravda. Pešiak sa zvyčajne premieňa na dámu. Len pešiaci môžu byť premenení.\n\nAko premeniť pešiaka v šachu\n\nAko hrať „en passant“\nPosledné pravidlo o pešiakoch sa nazýva \"en passant\", čo vo francúzštine znamená \"prechádzajúc\". Ak sa pešiak pohne pri prvom ťahu o 2 polia a tak prejde okolo súperovho pešiaka (efektívne preskakuje možnosť súperovho pešiaka na branie), tak ten druhý má možnosť ho zobrať, akoby išiel len o jedno pole.\n\nŠachový en passant\n\nTento špeciálny ťah musí byť vykonaný ihneď po pohybe pešiaka o 2 polia, inak túto možnosť stráca. Preklikaj sa cez príklad nižšie pre lepšie pochopenie tohto vedľajšieho, ale dôležitého pravidla.\n\nen passant\n\nAko urobiť rošádu\nĎalšie špeciálne pravidlo šachu sa nazýva rošáda. Tento ťah umožňuje vykonať dve dôležité veci v jednom ťahu: dostať svojho kráľa do bezpečia (dúfajme) a presunúť svoju vežu preč z rohu a dostať ju do hry. Počas jedného ťahu môžeš posunúť svojho kráľa o 2 políčka na stranu a potom posunúť vežu z toho rohu hneď vedľa kráľa na opačnú stranu. (Pozri príklad nižšie.) Avšak na vykonanie rošády musia byť splnené tieto podmienky:\n\nmusí to byť prvý ťah kráľom\nmusí to byť prvý ťah vežou\npri tomto ťahu nemôžu byť medzi kráľom a vežou žiadne figúry\nkráľ nesmie byť v šachu ani ním prechádzať\nVšimni si, že keď robíš rošádu smerom ku kráľovi, tak kráľ je bližšie ku kraju šachovnice. Toto sa volá „malá rošáda“. Rošáda na druhú stranu, kde sedela dáma, sa nazýva „veľká rošáda“. Bez ohľadu na stranu, kráľ sa vždy pri rošáde posúva o 2 polia.\n\nAko urobiť rošádu\n\n\nKrok 4. Zisti, kto v šachu ťahá ako prvý\n\nHráč s bielymi figúrkami vždy ťahá ako prvý. Preto, kto bude biely, sa hráči zvyčajne dohodnú losovaním, ako napríklad hodením si mincou alebo že jeden hráč háda farbu pešiaka skrytého v súperovej ruke. Potom biely potiahne, za ním čierny a potom opäť biely, potom čierny a tak ďalej, až do konca hry. Možnosť ťahať ako prvý je drobná výhoda, ktorá dáva bielemu hráčovi príležitosť okamžite útočiť.\n\n\nKrok 5. Prezri si pravidlá, ako vyhrať šachovú partiu\n\nExistuje niekoľko spôsobov, akými môže skončiť šachová partia: matom, remízou, rezignáciou, padnutím na čas...\n\nAko matovať\nZmyslom hry je matovať súperovho kráľa. Toto sa stane, keď je kráľ vystavený šachu a nemôže sa zo šachu dostať. Sú len tri možnosti, ako sa kráľ môže dostať zo šachu:\n\nuhnúť sa (takže už nemôže robiť rošádu!),\nzakryť šach inou figúrou\nalebo zobrať figúru ohrozujúcu kráľa.\nPokiaľ kráľ nemôže ujsť matu, vtedy hra končí. Kráľ sa neberie, ani nie je odstránený zo šachovnice, hra je jednoducho vyhlásená za ukončenú.\n\nMat bláznov\n\nUkážka \"matu bláznov\".\n\nAko remízovať partiu\nNiekedy sa šachové partie neskončia víťazstvom, ale remízou. Je 5 dôvodov, prečo šachová partia môže skončiť remízou:\n\nPozícia dosiahne pat vtedy, keď je jeden hráč na ťahu, ale nemá žiaden platný ťah a jeho kráľ nie je v šachu. \nPat\n\nŤahom Dc7 čierny nie je ohrozený a nemôže ťahať. Partia je prehlásená za remízu patom.\n\nHráči sa môžu jednoducho dohodnúť na remíze a skončiť hru\nNedostatok figúr na dosiahnutie matu (príklad: kráľ a strelec proti samotnému kráľovi)\nHráč vyhlasuje remízu, ak sa trikrát zopakovala rovnaká pozícia (avšak nemusí nasledovať trikrát za sebou)\nBolo odohraných 50 po sebe nasledujúcich ťahov, pričom ani jeden z hráčov nepohol pešiakom ani nezobral žiadnu figúru\n\n\nKrok 6. Študuj základné šachové stratégie\n\nSú štyri jednoduché veci, ktoré by mal vedieť každý šachista:\n\nOchráň svojho kráľa\nDostaň svojho kráľa do rohu šachovnice, kde je zvyčajne v bezpečí. Neodkladaj rošádu. Mal by si ju urobiť čo najskôr. Pamätaj, nezáleží na tom, ako blízko si k zmatovaniu svojho súpera, pokiaľ tvoj kráľ dostane mat skôr!\n\nNestrácaj figúry\nNestrácaj zbrklo svoje figúry! Každá z nich je cenná. Ak ich stratíš priveľa, nebudeš môcť dať mat a vyhrať partiu. Existuje jednoduchý systém, ktorý využíva väčšina hráčov na sledovanie relatívnej hodnoty každej šachovej figúry. Akú majú hodnotu šachové figúry?\n\nPešiak má hodnotu 1\nJazdec má hodnotu 3\nStrelec má hodnotu 3\nVeža má hodnotu 5\nDáma má hodnotu 9\nKráľ má nekonečnú hodnotu\nNa konci partie tieto body neznamenajú nič. Je to jednoducho systém, ktorý môžeš použiť na rozhodovanie počas hry, pomôže ti rozoznať, kedy brať, vymeniť alebo urobiť iný ťah.\n\nhodnoty šachových figúr\n\nKontroluj stred šachovnice\nSo svojimi figúrami a pešiakmi by si sa mal pokúšať o prevzatie kontroly nad stredom šachovnice. Ak kontroluješ centrum, budeš mať viac priestoru na pohyb svojich figúr a sťažíš súperovi hľadanie výhodných polí pre jeho figúry. Na príklade vyššie môžeš vidieť, ako biely hrá dobré ťahy na kontrolu centra, zatiaľ čo čierny hrá zlé ťahy.\n\nVyuži všetky svoje šachové figúry\nVo vzorovej pozícii vyššie má biely v hre všetky figúry. Tvoje figúry nerobia nič dobré, ak sedia vzadu na prvom rade. Pokúšaj sa vyvíjať všetky svoje figúry, aby si ich mohol využiť pri útoku na kráľa čo najviac. Útok s využitím len jednej alebo dvoch figúr neobstojí proti žiadnej slušnej obrane.\n\n\nKrok 7. Trénuj hraním množstva partií\n\nNajdôležitejšou vecou, ktorú môžeš urobiť, aby si sa zlepšil, je hrať veľa šachu. Nezáleží na tom, či hráš doma s priateľmi, rodinou alebo hráš online. Musíš hrať, aby si sa poriadne zlepšil. V dnešnej dobe je jednoduché hrať šach online.");
        scrollRules.setViewportView(txtRules);

        panelRules.add(scrollRules, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 760, 610));

        lblRules.setFont(new java.awt.Font("Tahoma", 1, 70)); // NOI18N
        lblRules.setForeground(new java.awt.Color(102, 102, 0));
        lblRules.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRules.setText("RULES");
        lblRules.setPreferredSize(new java.awt.Dimension(500, 100));
        panelRules.add(lblRules, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        lblOK.setBackground(new java.awt.Color(175, 175, 175));
        lblOK.setFont(new java.awt.Font("Tahoma", 1, 32)); // NOI18N
        lblOK.setForeground(new java.awt.Color(102, 102, 0));
        lblOK.setText("OK");
        lblOK.setPreferredSize(new java.awt.Dimension(180, 40));
        lblOK.setRolloverEnabled(false);
        lblOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblOKMouseReleased(evt);
            }
        });
        panelRules.add(lblOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 740, -1, -1));

        getContentPane().add(panelRules, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 800));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblOKMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOKMouseReleased
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lblOKMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tips_And_Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tips_And_Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tips_And_Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tips_And_Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tips_And_Rules().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton lblOK;
    private javax.swing.JLabel lblRules;
    private javax.swing.JPanel panelRules;
    private javax.swing.JScrollPane scrollRules;
    private javax.swing.JTextPane txtRules;
    // End of variables declaration//GEN-END:variables
}
